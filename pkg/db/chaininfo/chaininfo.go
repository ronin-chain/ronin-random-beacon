// Code generated by ent, DO NOT EDIT.

package chaininfo

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the chaininfo type in the database.
	Label = "chain_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProcessedBlock holds the string denoting the processed_block field in the database.
	FieldProcessedBlock = "processed_block"
	// FieldFinalizedBlock holds the string denoting the finalized_block field in the database.
	FieldFinalizedBlock = "finalized_block"
	// Table holds the table name of the chaininfo in the database.
	Table = "chain_infos"
)

// Columns holds all SQL columns for chaininfo fields.
var Columns = []string{
	FieldID,
	FieldProcessedBlock,
	FieldFinalizedBlock,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultProcessedBlock holds the default value on creation for the "processed_block" field.
	DefaultProcessedBlock uint64
	// DefaultFinalizedBlock holds the default value on creation for the "finalized_block" field.
	DefaultFinalizedBlock uint64
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// OrderOption defines the ordering options for the ChainInfo queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByProcessedBlock orders the results by the processed_block field.
func ByProcessedBlock(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProcessedBlock, opts...).ToFunc()
}

// ByFinalizedBlock orders the results by the finalized_block field.
func ByFinalizedBlock(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFinalizedBlock, opts...).ToFunc()
}
